@TechReport{Church,
    author = {Wolfgang Thomas},
    title = {Churchâ€™s Problem and a Tour through Automata Theory},
    institution = {{RWTH Aachen, Lehrstuhl Informatik 7, 52056 Aachen, Germany}},
    year = {2008}
}

@TechReport{NeiderThesis,
	author = {Daniel Neider},
	title = {Applications of Automata Learning in Verification and Synthesis},
	year = {2014}
}

@InProceedings{NeiderAutomaton,
author="Neider, Daniel
and Topcu, Ufuk",
editor="Chechik, Marsha
and Raskin, Jean-Fran{\c{c}}ois",
title="An Automaton Learning Approach to Solving Safety Games over Infinite Graphs",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2016",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="204--221",
abstract="We propose a method to construct finite-state reactive controllers for systems whose interactions with their adversarial environment are modeled by infinite-duration two-player games over (possibly) infinite graphs. The method targets safety games with infinitely many states or with such a large number of states that it would be impractical---if not impossible---for conventional synthesis techniques that work on the entire state space. We resort to constructing finite-state controllers for such systems through an automata learning approach, utilizing a symbolic representation of the underlying game that is based on finite automata. Throughout the learning process, the learner maintains an approximation of the winning region (represented as a finite automaton) and refines it using different types of counterexamples provided by the teacher until a satisfactory controller can be derived (if one exists). We present a symbolic representation of safety games (inspired by regular model checking), propose implementations of the learner and teacher, and evaluate their performance on examples motivated by robotic motion planning.",
isbn="978-3-662-49674-9"
}

@Misc{automaton,
  author =  {Anders M\o{}ller},
  title =   {dk.brics.automaton -- Finite-State Automata
             and Regular Expressions for {Java}},
  note =    {\texttt{http://www.brics.dk/automaton/}},
  year =    2021
} 
